  -- complex equality and inequality operators
  function "="
  -> input: l : complex_polar; r : complex_polar;
  -> output: boolean;
  -> purpose: returns true if l is equal to r and returns false otherwise

  function "/="
  -> input: l : complex_polar; r : complex_polar;
  -> output: boolean;
  -> purpose: returns true if l is not equal to r and returns falseotherwise


  -- complex functions
  function cmplx
  -> input: x : real; y : real := 0.0)
  -> output: complex;
  -> purpose: returns complex number x + iy

  function get_principal_value
  -> input: x : real;
  -> output: principal_value;
  -> purpose: returns principal value of angle x; x in radians

  function complex_to_polar
  -> input: z : complex;
  -> output: complex_polar;
  -> purpose: returns principal value complex_polar of z

  function polar_to_complex
  -> input: z : complex_polar;
  -> output: complex;
  -> purpose: returns complex value of z

  function "abs"
  -> input: z : complex;
  -> output: positive_real;
  -> purpose: returns absolute value (magnitude) of z

  function "abs"
  -> input: z : complex_polar;
  -> output: positive_real;
  -> purpose: returns absolute value (magnitude) of z

  function arg
  -> input: z : complex;
  -> output: principal_value;
  -> purpose: returns argument (angle) in radians of the principal value of z

  function arg
  -> input: z : complex_polar;
  -> output: principal_value;
  -> purpose: returns argument (angle) in radians of the principal value of z

  function "-"
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns unary minus of z

  function "-"
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of unary minus of z

  function conj
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns complex conjugate of z

  function conj
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of complex conjugate of z

  function sqrt
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns square root of z with positive real part or, if the real part is zero, the one with nonnegative imaginary part

  function sqrt
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns square root of z with positive real part or, if the real part is zero, the one with nonnegative imaginary part

  function exp
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns exponential of z

  function exp
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of exponential of z

  function log
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns natural logarithm of z

  function log2
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns logarithm base 2 of z

  function log10
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns logarithm base 10 of z

  function log
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of natural logarithm of z

  function log2
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of logarithm base 2 of z

  function log10
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of logarithm base 10 of z

  function log
  -> input: z : complex; base : real;
  -> output: complex;
  -> purpose: returns logarithm base base of z

  function log
  -> input: z : complex_polar; base : real;
  -> output: complex_polar;
  -> purpose: returns principal value of logarithm base base of z

  function sin
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns sine of z

  function sin
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of sine of z

  function cos
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns cosine of z

  function cos
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of cosine of z

  function sinh
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns hyperbolic sine of z

  function sinh
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of hyperbolic sine of z

  function cosh
  -> input: z : complex;
  -> output: complex;
  -> purpose: returns hyperbolic cosine of z

  function cosh
  -> input: z : complex_polar;
  -> output: complex_polar;
  -> purpose: returns principal value of hyperbolic cosine of z


  -- complex arithmetic operators
  function "+"
  -> input: l : complex; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic addition of l and r

  function "+"
  -> input: l : real; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic addition of l and r

  function "+"
  -> input: l : complex; r : real;
  -> output: complex;
  -> purpose: returns arithmetic addition of l and r

  function "+"
  -> input: l : complex_polar; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic addition of l and r

  function "+"
  -> input: l : real; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic addition of l and r

  function "+"
  -> input: l : complex_polar; r : real;
  -> output: complex_polar;
  -> purpose: returns arithmetic addition of l and r

  function "-"
  -> input: l : complex; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic subtraction of l minus r

  function "-"
  -> input: l : real; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic subtraction of l minus r

  function "-"
  -> input: l : complex; r : real;
  -> output: complex;
  -> purpose: returns arithmetic subtraction of l minus r

  function "-"
  -> input: l : complex_polar; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic subtraction of l minus r

  function "-"
  -> input: l : real; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic subtraction of l minus r

  function "-"
  -> input: l : complex_polar; r : real;
  -> output: complex_polar;
  -> purpose: returns arithmetic subtraction of l minus r

  function "*"
  -> input: l : complex; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic multiplication of l and r

  function "*"
  -> input: l : real; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic multiplication of l and r

  function "*"
  -> input: l : complex; r : real;
  -> output: complex;
  -> purpose: returns arithmetic multiplication of l and r

  function "*"
  -> input: l : complex_polar; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic multiplication of l and r

  function "*"
  -> input: l : real; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic multiplication of l and r

  function "*"
  -> input: l : complex_polar; r : real;
  -> output: complex_polar;
  -> purpose: returns arithmetic multiplication of l and r

  function "/"
  -> input: l : complex; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic division of l by r

  function "/"
  -> input: l : real; r : complex;
  -> output: complex;
  -> purpose: returns arithmetic division of l by r

  function "/"
  -> input: l : complex; r : real;
  -> output: complex;
  -> purpose: returns arithmetic division of l by r

  function "/"
  -> input: l : complex_polar; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic division of l by r

  function "/"
  -> input: l : real; r : complex_polar;
  -> output: complex_polar;
  -> purpose: returns arithmetic division of l by r

  function "/"
  -> input: l : complex_polar; r : real;
  -> output: complex_polar;
  -> purpose: returns arithmetic division of l by r
